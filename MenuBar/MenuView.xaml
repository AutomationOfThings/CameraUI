<UserControl x:Class="MenuBar.MenuView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MenuBar"
             mc:Ignorable="d" 
             d:DesignHeight="30" d:DesignWidth="300">
    <UserControl.Resources>

        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />

        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />

        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />

        <!-- Border Brushes -->
        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

        <!-- Miscellaneous Brushes -->
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

        <!-- TopLevelHeader -->
        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="MenuItem">
            <Border Name="Border" >
                <Grid>
                    <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" HorizontalAlignment="Center" />
                    <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade" VerticalOffset="1">
                        <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{Binding modeColors.ModeColor_WhiteSmoke_MedianDark}" BorderBrush="{Binding modeColors.ModeColor_LightGray_Gray}" BorderThickness="1" >
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{Binding modeColors.ModeColor_LightGray_Gray}"/>
                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                </Trigger>
                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,0,0"/>
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,0"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- TopLevelItem -->

        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="MenuItem">
            <Border Name="Border" >
                <Grid>
                    <ContentPresenter  Margin="6,3,6,3"  ContentSource="Header" RecognizesAccessKey="True" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{Binding modeColors.ModeColor_WhiteSmoke_MedianDark}"/>
                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground"
              Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- SubmenuItem -->

        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
            <Border Name="Border" Height="25" Background="{Binding modeColors.ModeColor_WhiteSmoke_Gray}" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40" SharedSizeGroup="Icon"/>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                        <ColumnDefinition Width="25"/>
                    </Grid.ColumnDefinitions>
                    <Border BorderBrush="{Binding modeColors.ModeColor_LightGray_Gray}" BorderThickness="0,0,1,0" Margin="6,0,6,0" >
                        <ContentPresenter Name="Icon"  VerticalAlignment="Center" ContentSource="Icon" Margin="2,2,6,2" />
                    </Border>
                    <Border Name="Check" Width="13" Height="13"  Visibility="Collapsed" Margin="6,0,6,0" Background="{Binding modeColors.ModeColor_WhiteSmoke_MedianDark}" BorderThickness="1" BorderBrush="Gray">
                        <Path Name="CheckMark" Width="7" Height="7"  Visibility="Hidden"  SnapsToDevicePixels="False"  Stroke="{StaticResource GlyphBrush}" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                    </Border>
                    <ContentPresenter  Name="HeaderHost" Grid.Column="1" ContentSource="Header" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    <TextBlock x:Name="InputGestureText" Grid.Column="2" VerticalAlignment="Center" Text="{TemplateBinding InputGestureText}" Margin="15,2,0,2" DockPanel.Dock="Right" TextAlignment="Right"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsCheckable" Value="true">
                    <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- SubmenuHeader -->

        <ControlTemplate  x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"  TargetType="MenuItem">
            <Border Name="Border" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                        <ColumnDefinition Width="13"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter  Name="Icon"  Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
                    <ContentPresenter  Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True"/>
                    <TextBlock x:Name="InputGestureText" Grid.Column="2"  Text="{TemplateBinding InputGestureText}" Margin="5,2,2,2" DockPanel.Dock="Right"/>
                    <Path  Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z"  Fill="{StaticResource GlyphBrush}" />
                    <Popup  Name="Popup" Placement="Right" HorizontalOffset="-4"  IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Fade">
                        <Border  Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{Binding modeColors.ModeColor_WhiteSmoke_MedianDark}" BorderBrush="{Binding modeColors.ModeColor_LightGray_Gray}" BorderThickness="1" >
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>
                </Trigger>
                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4"/>
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- MenuItem Style -->

        <Style x:Key="{x:Type MenuItem}" TargetType="MenuItem">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelHeader">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                    <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                </Trigger>
                <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuItem">
                    <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>


    <Grid Background="{Binding modeColors.ModeColor_SkyBlue_DimDark}">
        <Menu Background="{Binding modeColors.ModeColor_WhiteSmoke_MedianDark}">
            <MenuItem Header="Tools" VerticalAlignment="Center" HorizontalAlignment="Center" Height="24" Width="70" Margin="10,3,10,3" Background="{Binding modeColors.ModeColor_WhiteSmoke_MedianDark}" Foreground="{Binding modeColors.ModeColor_Black_WhiteSmoke}" >
                <MenuItem Header="Discover Cameras" Command="{Binding DiscoverCommand}" CommandParameter="{Binding Discover}" InputGestureText="Ctrl+D" Background="{Binding modeColors.ModeColor_WhiteSmoke_MedianDark}" Foreground="{Binding modeColors.ModeColor_Black_WhiteSmoke}" BorderBrush="{Binding modeColors.ModeColor_WhiteSmoke_MedianDark}" >
                    <MenuItem.Icon>
                        <Image Source="Resources/Discover.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Change Mode" Command="{Binding ModeCommand}" CommandParameter="{Binding Mode}" InputGestureText="Ctrl+M" Background="{Binding modeColors.ModeColor_WhiteSmoke_MedianDark}" Foreground="{Binding modeColors.ModeColor_Black_WhiteSmoke}" BorderBrush="{Binding modeColors.ModeColor_WhiteSmoke_MedianDark}" >
                    <MenuItem.Icon>
                        <Image Source="Resources/Mode.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Camera information" Command="{Binding CheckCameraInfoCommand}" InputGestureText="Ctrl+R" Background="{Binding modeColors.ModeColor_WhiteSmoke_MedianDark}" Foreground="{Binding modeColors.ModeColor_Black_WhiteSmoke}" BorderBrush="{Binding modeColors.ModeColor_WhiteSmoke_MedianDark}" >
                    <MenuItem.Icon>
                        <Image Source="Resources/CamInfo.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Relaunch runtime" Command="{Binding RelaunchRuntimeCommand}" InputGestureText="Ctrl+R" Background="{Binding modeColors.ModeColor_WhiteSmoke_MedianDark}" Foreground="{Binding modeColors.ModeColor_Black_WhiteSmoke}" BorderBrush="{Binding modeColors.ModeColor_WhiteSmoke_MedianDark}" >
                    <MenuItem.Icon>
                        <Image Source="Resources/relaunch.png" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>
        <Border BorderThickness="0,0,0,1" BorderBrush="{Binding modeColors.ModeColor_LightBlue_DimDark}"></Border>

    </Grid>
</UserControl>
