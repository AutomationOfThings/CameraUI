<UserControl x:Class="Presetting.PresettingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:c="clr-namespace:Presetting"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:theme="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <Style TargetType="Button" x:Key="MyButton">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="{Binding DataContext.modeColors.ModeColor_WhiteSmoke_MedianDark, RelativeSource={RelativeSource AncestorType=UserControl}}" />
            <Setter Property="Foreground" Value="{Binding DataContext.modeColors.ModeColor_Black_WhiteSmoke, RelativeSource={RelativeSource AncestorType=UserControl}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{Binding DataContext.modeColors.ModeColor_SmallGray_LargeGray, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                    <Setter Property="Foreground" Value="{Binding DataContext.modeColors.ModeColor_White_Black, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFBCE5FE"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Color x:Key="ControlLightColor">Gray</Color>
        <Color x:Key="ControlMediumColor">#FF7381F9</Color>

        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <ControlTemplate x:Key="ComboBoxToggleButton"
                 TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="0" BorderThickness="0,0,1,0" BorderBrush="{Binding DataContext.modeColors.ModeColor_LightGray_Gray, RelativeSource={RelativeSource AncestorType=Window}}" Background="{Binding DataContext.modeColors.ModeColor_White_MedianDark, RelativeSource={RelativeSource AncestorType=Window}}" />
                <Border Grid.Column="0" CornerRadius="0" Margin="0" BorderThickness="0" BorderBrush="{Binding DataContext.modeColors.ModeColor_LightGray_Gray, RelativeSource={RelativeSource AncestorType=Window}}" Background="{Binding DataContext.modeColors.ModeColor_White_MedianDark, RelativeSource={RelativeSource AncestorType=Window}}" />
                <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="{Binding DataContext.modeColors.ModeColor_Black_WhiteSmoke, RelativeSource={RelativeSource AncestorType=Window}}"/>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox"
                 TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="MinWidth" Value="60" />
            <Setter Property="MinHeight" Value="24" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="False" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,3,3,3" VerticalAlignment="Stretch" HorizontalAlignment="Center">
                            </ContentPresenter>
                            <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="False" Focusable="False" PopupAnimation="Slide">
                                <Grid x:Name="DropDown" Background="{Binding DataContext.modeColors.ModeColor_Gray_LightGray, RelativeSource={RelativeSource AncestorType=Window}}" 
                                    SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"/>
                                    <ScrollViewer Margin="1" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" HorizontalAlignment="Stretch"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="False">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Border" Padding="0" SnapsToDevicePixels="true" Background="Transparent" >
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="CameraComboBoxTemplate">
            <ComboBox ItemsSource="{Binding CameraNameList}" DisplayMemberPath="CameraName" SelectedItem="{Binding Camera, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Stretch" BorderBrush="{x:Null}" BorderThickness="0"
             Background="{Binding DataContext.modeColors.ModeColor_White_MedianDark, RelativeSource={RelativeSource AncestorType=Window}}" 
             Foreground="{Binding DataContext.modeColors.ModeColor_Black_WhiteSmoke, RelativeSource={RelativeSource AncestorType=Window}}">
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Background" Value="{Binding DataContext.modeColors.ModeColor_White_MedianDark, RelativeSource={RelativeSource AncestorType=Window}}"/>
                        <Setter Property="BorderBrush" Value="{Binding DataContext.modeColors.ModeColor_LightGray_Gray, RelativeSource={RelativeSource AncestorType=Window}}"/>
                        <Setter Property="BorderThickness" Value="0,1,0,0"/>
                        <Setter Property="Height" Value="24"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    </Style>
                </ComboBox.ItemContainerStyle>
            </ComboBox>
        </DataTemplate>
        <DataTemplate x:Key="PanSpinnerTemplate">
            <xctk:IntegerUpDown Value="{Binding Pan, UpdateSourceTrigger=PropertyChanged}" Minimum="0" Maximum="359" BorderThickness="0"
                    Background="{Binding DataContext.modeColors.ModeColor_White_MedianDark, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                    Foreground="{Binding DataContext.modeColors.ModeColor_Black_WhiteSmoke, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <xctk:IntegerUpDown.Style>
                    <Style TargetType="{x:Type xctk:IntegerUpDown}">
                        <Style.Resources>
                            <SolidColorBrush x:Key="{x:Static theme:ResourceKeys.GlyphNormalForegroundKey}"  Color="#FFA0A0A0"/>
                            <SolidColorBrush x:Key="{x:Static theme:ResourceKeys.ButtonNormalBackgroundKey}"  Color="#7FA0A0A0"/>
                            <SolidColorBrush x:Key="{x:Static theme:ResourceKeys.ButtonNormalOuterBorderKey}"  Color="Transparent"/>
                            <SolidColorBrush x:Key="{x:Static theme:ResourceKeys.ControlDisabledBackgroundKey}"  Color="Transparent"/>
                            <SolidColorBrush x:Key="{x:Static theme:ResourceKeys.ButtonDisabledOuterBorderKey}"  Color="Transparent"/>
                        </Style.Resources>
                    </Style>
                </xctk:IntegerUpDown.Style>
            </xctk:IntegerUpDown>
        </DataTemplate>
        <DataTemplate x:Key="TiltSpinnerTemplate">
            <xctk:IntegerUpDown Value="{Binding Tilt, UpdateSourceTrigger=PropertyChanged}" Minimum="-25" Maximum="195" BorderThickness="0" 
                    Background="{Binding DataContext.modeColors.ModeColor_White_MedianDark, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                    Foreground="{Binding DataContext.modeColors.ModeColor_Black_WhiteSmoke, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <xctk:IntegerUpDown.Style>
                    <Style TargetType="{x:Type xctk:IntegerUpDown}">
                        <Style.Resources>
                            <SolidColorBrush x:Key="{x:Static theme:ResourceKeys.GlyphNormalForegroundKey}"  Color="#FFA0A0A0"/>
                            <SolidColorBrush x:Key="{x:Static theme:ResourceKeys.ButtonNormalBackgroundKey}"  Color="#7FA0A0A0"/>
                            <SolidColorBrush x:Key="{x:Static theme:ResourceKeys.ButtonNormalOuterBorderKey}"  Color="Transparent"/>
                            <SolidColorBrush x:Key="{x:Static theme:ResourceKeys.ControlDisabledBackgroundKey}"  Color="Transparent"/>
                            <SolidColorBrush x:Key="{x:Static theme:ResourceKeys.ButtonDisabledOuterBorderKey}"  Color="Transparent"/>
                        </Style.Resources>
                    </Style>
                </xctk:IntegerUpDown.Style>
            </xctk:IntegerUpDown>
        </DataTemplate>
        <DataTemplate x:Key="ZoomSpinnerTemplate">
            <xctk:IntegerUpDown Value="{Binding Zoom, UpdateSourceTrigger=PropertyChanged}" Minimum="1" Maximum="32" BorderThickness="0" 
                    Background="{Binding DataContext.modeColors.ModeColor_White_MedianDark, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                    Foreground="{Binding DataContext.modeColors.ModeColor_Black_WhiteSmoke, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <xctk:IntegerUpDown.Style>
                    <Style TargetType="{x:Type xctk:IntegerUpDown}">
                        <Style.Resources>
                            <SolidColorBrush x:Key="{x:Static theme:ResourceKeys.GlyphNormalForegroundKey}"  Color="#FFA0A0A0"/>
                            <SolidColorBrush x:Key="{x:Static theme:ResourceKeys.ButtonNormalBackgroundKey}"  Color="#7FA0A0A0"/>
                            <SolidColorBrush x:Key="{x:Static theme:ResourceKeys.ButtonNormalOuterBorderKey}"  Color="Transparent"/>
                            <SolidColorBrush x:Key="{x:Static theme:ResourceKeys.ControlDisabledBackgroundKey}"  Color="Transparent"/>
                            <SolidColorBrush x:Key="{x:Static theme:ResourceKeys.ButtonDisabledOuterBorderKey}"  Color="Transparent"/>
                        </Style.Resources>
                    </Style>
                </xctk:IntegerUpDown.Style>
            </xctk:IntegerUpDown>
        </DataTemplate>
    </UserControl.Resources>

    <UserControl.InputBindings>
        <KeyBinding Key="S" Modifiers="Ctrl+Shift" Command="{Binding SaveAllCommand}"/>
        <KeyBinding Key="N" Modifiers="Ctrl" Command="{Binding AddCommand}" />
        <KeyBinding Key="D" Modifiers="Ctrl" Command="{Binding DeleteCommand}" />
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding DataContext.SaveCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}} }" />
    </UserControl.InputBindings>
    
    <Grid Background="{Binding modeColors.ModeColor_WhiteSmoke_MedianDark}">
        <Grid.Resources>
            <Style TargetType="{x:Type DataGridCell}">
                <Setter Property="Background" Value="{Binding DataContext.modeColors.ModeColor_WhiteSmoke_MedianDark, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                <Setter Property="BorderThickness" Value="0,0,1,0"/>
                <Setter Property="BorderBrush" Value="{Binding DataContext.modeColors.ModeColor_LightGray_Gray, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
            </Style>
        </Grid.Resources>

        <DataGrid Name="PresetDataGrid" ItemsSource="{Binding CamList}" SelectedIndex="{Binding SelectedIndex}" CanUserAddRows="True" CanUserDeleteRows="True" RowHeaderWidth="0"
            AutoGenerateColumns="False" Margin="0,0,0,40" GridLinesVisibility="Horizontal" HorizontalAlignment="Stretch" Background="{Binding modeColors.ModeColor_WhiteSmoke_MedianDark}" 
            HorizontalGridLinesBrush="{Binding DataContext.modeColors.ModeColor_LightGray_Gray, RelativeSource={RelativeSource AncestorType=UserControl}}" CanUserResizeColumns="False" CanUserSortColumns="False"
            Foreground="{Binding modeColors.ModeColor_Black_WhiteSmoke}" BorderThickness="0" BorderBrush="{Binding modeColors.ModeColor_LightGray_Gray}" ScrollViewer.PanningMode="Both" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="Height" Value="24" />
                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                    <Setter Property="BorderBrush" Value="{Binding DataContext.modeColors.ModeColor_LightGray_Gray, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                    <Setter Property="Background" Value="{Binding DataContext.modeColors.ModeColor_WhiteSmoke_MedianDark, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                </Style>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers >
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="#FF02B402" />
                            <Setter Property="BorderThickness" Value="0.5" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Preset Name"  Binding="{Binding PresettingId, UpdateSourceTrigger=PropertyChanged}" Width="*" >
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="BorderThickness" Value="0,0,1,0"/>
                            <Setter Property="BorderBrush" Value="{Binding DataContext.modeColors.ModeColor_LightGray_Gray, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                            <Setter Property="Height" Value="25" />
                            <Setter Property="Background" Value="{Binding DataContext.modeColors.ModeColor_White_MedianDark, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                        </Style>
                    </DataGridTextColumn.CellStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Background" Value="{Binding DataContext.modeColors.ModeColor_White_MedianDark, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                            <Setter Property="Foreground" Value="{Binding DataContext.modeColors.ModeColor_Black_WhiteSmoke, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="TextAlignment" Value="Center" />
                            <Setter Property="Margin" Value="4" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.EditingElementStyle>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Background" Value="{Binding DataContext.modeColors.ModeColor_White_MedianDark, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                            <Setter Property="Foreground" Value="{Binding DataContext.modeColors.ModeColor_Black_WhiteSmoke, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                            <Setter Property="VerticalAlignment" Value="Stretch" />
                            <Setter Property="TextAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                </DataGridTextColumn>

                <DataGridTemplateColumn Header="Camera Name" Width="*"  CellTemplate="{StaticResource CameraComboBoxTemplate}" CellEditingTemplate="{StaticResource CameraComboBoxTemplate}" >
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                            <Setter Property="BorderThickness" Value="0" />
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Pan" Width="*" CellTemplate="{StaticResource PanSpinnerTemplate}" CellEditingTemplate="{StaticResource PanSpinnerTemplate}"/>
                <DataGridTemplateColumn Header="Tilt" Width="*" CellTemplate="{StaticResource TiltSpinnerTemplate}" CellEditingTemplate="{StaticResource TiltSpinnerTemplate}"/>
                <DataGridTemplateColumn Header="Zoom" Width="*" CellTemplate="{StaticResource ZoomSpinnerTemplate}" CellEditingTemplate="{StaticResource ZoomSpinnerTemplate}"/>
                
                <DataGridTemplateColumn Width="*">
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                            <Setter Property="BorderThickness" Value="0,0,1,0" />
                            <Setter Property="BorderBrush" Value="{Binding DataContext.modeColors.ModeColor_LightGray_Gray, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                    <DataGridTemplateColumn.CellTemplate>        
                        <DataTemplate>
                            <Button BorderThickness="0" Command="{Binding DataContext.SaveCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}} }" IsEnabled="{Binding CanSave}" 
                            Style="{StaticResource MyButton}" >Store</Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Width="*">
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="BorderBrush" Value="{Binding DataContext.modeColors.ModeColor_LightGray_Gray, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button BorderThickness="0" Command="{Binding DataContext.SetCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}} }" 
                            Style="{StaticResource MyButton}">Set</Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Button Content="Store All" Command="{Binding SaveAllCommand}" Background="{Binding modeColors.ModeColor_WhiteSmoke_Gray}" Foreground="{Binding modeColors.ModeColor_Black_WhiteSmoke}" Height="25" Width="70" Margin="0,0,10,7.5" HorizontalAlignment="Right" VerticalAlignment="Bottom" />
        <Button Content="Delete" Command="{Binding DeleteCommand}" Background="{Binding modeColors.ModeColor_WhiteSmoke_Gray}" Foreground="{Binding modeColors.ModeColor_Black_WhiteSmoke}" Height="25" Width="70" Margin="0,0,90,7.5" HorizontalAlignment="Right" VerticalAlignment="Bottom" />
        <Button Content="Add New" Command="{Binding AddCommand}" Background="{Binding modeColors.ModeColor_WhiteSmoke_Gray}" Foreground="{Binding modeColors.ModeColor_Black_WhiteSmoke}" Height="25" Width="70" Margin="0,0,170,7.5" HorizontalAlignment="Right" VerticalAlignment="Bottom" />
    </Grid>
</UserControl>
